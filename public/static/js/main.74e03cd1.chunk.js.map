{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRoute.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","type","payload","calendar","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","eventos","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","initEvent","notes","CalendarModal","titleValid","settitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","console","log","evento","_id","eventStarAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRoute","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74e03cd1.chunk.js","sourcesContent":["export const types = {\r\n\r\n  uiOpenModal: '[ui] Open Modal',\r\n  uiCloseModal: '[ui] Close Modal',\r\n  \r\n  eventSetActive: '[event] Set Active',\r\n  eventLogout: '[event] Logout',\r\n  eventStartAddNew: '[event] Start Add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Event loaded',\r\n\r\n  authCheckingFinish: '[auth] Finish Checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] login',\r\n  authStartRegister: '[auth] Start register',\r\n  authStartTokerRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] logout',\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  checking: true\r\n}\r\n\r\nexport const AuthReducer = ( state = initialState, {type, payload } ) => {\r\n  switch (type) {\r\n    case types.authLogin:      \r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        checking: false\r\n      };\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, { type, payload } ) => {\r\n\r\n  switch (type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: payload\r\n      }\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [\r\n          ...state.events,\r\n          payload\r\n        ]\r\n      }\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(\r\n          event => ( event.id === payload.id ) ? payload : event\r\n        )\r\n      }\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          event => ( event.id !== state.activeEvent.id )\r\n        ),\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n        events: [ ...payload ]\r\n      }\r\n    case types.eventLogout:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, { type, payload } ) => {\r\n  \r\n  switch (type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true\r\n      }\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { AuthReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: AuthReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware( thunk )\r\n  )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n  const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n  if ( method === 'GET' ) {\r\n    return fetch( url );\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n  const url = `${ baseUrl }/${ endpoint }`;\r\n  const token = localStorage.getItem( 'token' || '' );\r\n  \r\n  if ( method === 'GET' ) {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    });\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  fetchSinToken,\r\n  fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n  return events.map(\r\n    e => ({\r\n      ...e,\r\n      end: moment( e.end ).toDate(),\r\n      start: moment( e.start ).toDate(),\r\n    })\r\n  )\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStarAddNew = ( event ) => {\r\n  return async ( dispatch, getState ) => {\r\n    \r\n    const { uid, name } = getState().auth;\r\n\r\n    try {\r\n      \r\n      const resp = await fetchConToken( 'events', event, 'POST' );\r\n      const body = await resp.json();\r\n\r\n      if( body.ok ) {\r\n        \r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name\r\n        };\r\n\r\n        dispatch( eventAddNew ( event ) );\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n  return async ( dispatch, getState ) => {\r\n    try {\r\n      \r\n      const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n      const body = await resp.json();\r\n\r\n      if( body.ok ) {\r\n        dispatch( eventUpdated ( event ) );\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n});\r\n\r\nexport const eventStarDelete = ( event ) => {\r\n  return async ( dispatch, getState ) => {\r\n    try {\r\n      \r\n      const { id } = getState().calendar.activeEvent;\r\n      await fetchConToken( `events/${ id }`, {}, 'DELETE' );\r\n\r\n      dispatch( eventDeleted ( event ) );\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      Swal.fire('Error', 'error al borrar en base de datos', 'error');\r\n    }\r\n  }\r\n}\r\n\r\nexport const eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStarLoading = ( event ) => {\r\n  return async ( dispatch, getState ) => {\r\n    \r\n    // const { uid, name } = getState().auth;\r\n\r\n    try {\r\n      \r\n      const resp = await fetchConToken( 'events' );\r\n      const body = await resp.json();\r\n      \r\n      if( body.ok ) {\r\n      \r\n        const events = prepareEvents( body.eventos );\r\n        dispatch( eventLoaded ( events ) );\r\n      \r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = ( eventos ) => ({\r\n  type: types.eventLoaded,\r\n  payload: eventos\r\n});\r\n\r\nexport const eventStarLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\r\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from '../types/types';\r\nimport { eventStarLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n  return async ( dispatch ) => {\r\n\r\n    const resp = await fetchSinToken('auth', { email, password }, 'POST' );\r\n    const body = await resp.json();\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n    \r\n      dispatch( login ({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n\r\n    } else {\r\n      Swal.fire( 'Error', body.msg, 'error' );\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n  return async ( dispatch ) => {\r\n\r\n    const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST' );\r\n    const body = await resp.json();\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n    \r\n      dispatch( login ({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n\r\n    } else {\r\n      Swal.fire( 'Error', body.msg, 'error' );\r\n    }\r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n  return async ( dispatch ) => {\r\n\r\n    const resp = await fetchConToken('auth/renew', {} );\r\n    const body = await resp.json();\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n    \r\n      dispatch( login ({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n\r\n    } else {\r\n\r\n      dispatch( checkingFinish() );\r\n    }\r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n\r\n  return async ( dispatch ) => {\r\n      localStorage.clear();\r\n      dispatch( logout() );\r\n      dispatch( eventStarLogout() );\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });","\r\nimport { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    \r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]:target.value \r\n        });\r\n    }\r\n\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\tconst [ formLoginValues, handleLoginInputChange ] = useForm({\r\n    lEmail: 'lopezpaulo89@gmail.com',\r\n    lPassword: '1234567'\r\n  });\r\n  \r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n\tconst [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n    rName: 'jesus',\r\n    rEmail: 'llopezpaulo89@gmail.com',\r\n    rPassword: '1234567',\r\n    rPassword2: '1234567'\r\n  });\r\n\r\n  const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n\r\n  const handleLogin = ( e ) => {\r\n    \r\n    e.preventDefault();\r\n    dispatch( startLogin( lEmail, lPassword ) );\r\n  }\r\n\r\n  const handleRegister = ( e ) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    if( rPassword !== rPassword2 ) {\r\n      return Swal.fire( 'Error', 'Las contraseñas deben ser iguales', 'error' );\r\n    }\r\n\r\n    dispatch( startRegister( rName, rEmail, rPassword ) );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={ handleLogin }>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={ lEmail }\r\n                onChange={ handleLoginInputChange }\r\n              />\r\n          </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={ lPassword }\r\n                onChange={ handleLoginInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Login\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit= { handleRegister }>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={ rName }\r\n                onChange={ handleRegisterInputChange }                \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={ rEmail }\r\n                onChange={ handleRegisterInputChange }                \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword\"\r\n                value={ rPassword }\r\n                onChange={ handleRegisterInputChange }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={ rPassword2 }\r\n                onChange={ handleRegisterInputChange }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Crear cuenta\" />\r\n            </div>\r\n            </form>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector(state => state.auth);\r\n  \r\n  const handleLogout = () => {\r\n\r\n    dispatch( startLogout() );\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark nb-4\">\r\n      <span className=\"navbar-brand\">\r\n        { name }\r\n      </span>\r\n      <button\r\n        className=\"btn btn-outline-danger\"\r\n        onClick={ handleLogout }\r\n      >\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  \r\n  const { title, user:{name} } = event;\r\n  \r\n  return (\r\n    <div>\r\n      <span>{ title }</span>\r\n      <strong>- { name }</strong>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStarAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowEnd = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowEnd.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n  \r\n  const { modalOpen } = useSelector( state => state.ui );\r\n  const { activeEvent } = useSelector( state => state.calendar );\r\n  const dispatch = useDispatch();\r\n\r\n  //const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n  //const [ dateEnd, setDateEnd ] = useState( nowEnd.toDate() );\r\n  const [ titleValid, settitleValid ] = useState( true );\r\n\r\n  const [ formValues, setFormValues ] = useState( initEvent );\r\n  \r\n  const { title, notes, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if ( activeEvent ) {\r\n      \r\n      setFormValues( activeEvent );\r\n    } else {\r\n\r\n      setFormValues( initEvent );\r\n    }\r\n\r\n  }, [ activeEvent, setFormValues ]);\r\n\r\n  const handleInputChange = ( { target } ) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const closeModal = () => {\r\n    dispatch( uiCloseModal() );\r\n    dispatch( eventClearActiveEvent() );\r\n    setFormValues( initEvent );\r\n  }\r\n  \r\n  const handleStartDateChange = ( e ) => {\r\n    // setDateStart( e );\r\n    \r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  }\r\n  \r\n  const handleEndDateChange = ( e ) => {\r\n    \r\n    // setDateEnd( e );\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });    \r\n  }\r\n\r\n  const handleSubmitForm = ( e ) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    const momentStart = moment( start );\r\n    const momentEnd = moment( end );\r\n\r\n    if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n      return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de iniciio', 'error');\r\n    }\r\n\r\n    if ( title.trim().length < 2) {\r\n      return settitleValid( false );\r\n    }\r\n    if( activeEvent ) {\r\n\r\n      dispatch( eventStartUpdate( formValues ) );\r\n    \r\n    } else {\r\n      \r\n      dispatch( eventStarAddNew( formValues ) );\r\n    }\r\n\r\n    settitleValid( true );\r\n    closeModal();\r\n  }\r\n  \r\n  return (\r\n    <Modal\r\n      isOpen={ modalOpen }\r\n      onRequestClose={ closeModal }\r\n      style={ customStyles }\r\n      closeTimeoutMS={ 200 }\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> { activeEvent ? 'Editar Evento' : 'Nuevo evento' } </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={ handleSubmitForm }\r\n      >\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>          \r\n          <DateTimePicker\r\n            onChange={ handleStartDateChange }\r\n            value={ start }\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={ handleEndDateChange }\r\n            value={ end }\r\n            minDate={ start }\r\n            className=\"form-control\"            \r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={ title }\r\n            onChange={ handleInputChange }\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={ notes }\r\n            onChange={ handleInputChange }            \r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickNew = () => {\r\n    console.log('sdfsd');\r\n    dispatch(uiOpenModal());\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={ handleClickNew }\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  )\r\n}","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { eventStarDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickDelete = () => {\r\n    dispatch( eventStarDelete() );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={ handleClickDelete }\r\n    >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar Evento </span>\r\n    </button>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStarLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useSelector } from 'react-redux';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { events, activeEvent } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth );\r\n  \r\n  const [ lastView, setLastView ] = useState( localStorage.getItem( 'lastView' ) || 'month' );  \r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch( eventStarLoading() );\r\n    \r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch( uiOpenModal() );\r\n  }\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch( eventSetActive( e ) );\r\n  }\r\n\r\n  const onViewChange = (e) =>{\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  }\r\n\r\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n    const style = {\r\n      backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      color: 'white',\r\n    }\r\n\r\n    return {\r\n      style\r\n    }\r\n  }\r\n  \r\n  const onSelectSlot = (e) => {\r\n    dispatch( eventClearActiveEvent() );\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      \r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={ localizer }\r\n        events={ events }\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={ messages }\r\n        eventPropGetter={ eventStyleGetter }\r\n        onDoubleClickEvent={ onDoubleClick }\r\n        onSelectEvent={ onSelectEvent }\r\n        onView={ onViewChange }\r\n        onSelectSlot={ onSelectSlot }\r\n        selectable={ true }\r\n        view={ lastView }\r\n        components={{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n\r\n      <AddNewFab/>\r\n      \r\n      {\r\n        activeEvent && <DeleteEventFab/>\r\n      }      \r\n      \r\n      \r\n      <CalendarModal />      \r\n\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  \r\n  localStorage.setItem('lastPath', rest.location.pathname);\r\n  \r\n  return (\r\n    \r\n    <Route { ...rest }\r\n      component={( props ) =>(\r\n        isAuthenticated\r\n          ? ( <Component { ...props }/> )\r\n          : ( <Redirect to=\"/login\" /> )\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","  \r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    \r\n    <Route { ...rest }\r\n      component={( props ) =>(\r\n        ( isAuthenticated )\r\n          ? ( <Redirect to=\"/\" /> )\r\n          : ( <Component { ...props }/> )\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRoute = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch( startChecking() );\r\n\r\n  }, [dispatch])\r\n\r\n  if( checking ) {\r\n    return <h5>Espere....</h5>\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <Switch>\r\n        <PublicRoute\r\n           exact\r\n           path=\"/login\"\r\n           component={ LoginScreen }\r\n           isAuthenticated={ !!uid }\r\n        />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={ CalendarScreen }\r\n            isAuthenticated={ !!uid }\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRoute } from './routers/AppRoute';\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <div>\r\n      <Provider store={ store }>\r\n        <AppRoute />\r\n      </Provider>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}